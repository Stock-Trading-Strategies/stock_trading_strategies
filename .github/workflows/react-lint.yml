name: React Linting

on:
  push:
    branches: [ "main" ]
    paths:
      - 'reactjs/**'
      - 'BuildTools/**'
      - '.github/workflows/react-lint.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'reactjs/**'
      - 'BuildTools/**'
      - '.github/workflows/react-lint.yml'
    types: [opened, ready_for_review, synchronize, reopened]

permissions:
  contents: read

jobs:
  eslint:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      ESLOG_FILE: eslint.results.log
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    - name: Check if React files changed
      id: file-check
      run: |
        changed=$(git diff --name-only origin/main...HEAD | grep '^reactjs/' || true)
        if [[ -z "$changed" ]]
        then
          echo "No React changes."
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi
    - name: Setup Env Vars
      if: steps.file-check.outputs.skip == 'false'
      run: |
        cat >> .envvars << EOF
            DJANGO_SECRET_KEY='django-insecure-4o3ug_h7f1r6fa2z5@4o3ug_h7f1r6fa2-!x=-n*tfuccxn5n'
            MYSQL_HOST=stocksdb
            MYSQL_PORT=3306
            MYSQL_ROOT_PASSWORD=unittestrootpw
            MYSQL_DATABASE=stocksapp
            MYSQL_USER=team2
            MYSQL_PASSWORD=unittestMysqlP@ssword
            MYSQL_PWD=unittestMysqlP@ssword
        EOF
    - name: Build FrontEnd
      if: steps.file-check.outputs.skip == 'false'
      run: |
        docker compose -f BuildTools/docker-compose.yml up -d --build --remove-orphans frontend
    - name: Copy in ESLint Config File
      if: steps.file-check.outputs.skip == 'false'
      run: |
        docker cp reactjs/eslint.config.mjs stocks_frontend:/react-app/src/
    - name: Run EsLint
      if: steps.file-check.outputs.skip == 'false'
      shell: bash
      run: |
        set +e
        docker exec stocks_frontend /bin/bash -c 'cd src; npx eslint $(find ./ -name "*.js" | grep -vP ".test.js") --quiet' > $ESLOG_FILE
        cat $ESLOG_FILE
    - name: Output Lint info
      if: steps.file-check.outputs.skip == 'false'
      run: |
        cat $ESLOG_FILE
    - name: Throw Lint Error Flag
      if: steps.file-check.outputs.skip == 'false'
      run: |
        if [[ $(grep -c -P '[0-9]+ problems' $ESLOG_FILE ) -ne 0 ]]; then
          echo "ESLint found errors."
          exit 1
        fi
